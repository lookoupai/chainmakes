# ChainMakes Backend Dockerfile
# 支持多架构构建: amd64, arm64
FROM python:3.11-slim

# 设置工作目录
WORKDIR /app

# 添加构建参数和标签
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION=latest

LABEL org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.authors="ChainMakes Team" \
      org.opencontainers.image.url="https://github.com/yourusername/chainmakes" \
      org.opencontainers.image.source="https://github.com/yourusername/chainmakes" \
      org.opencontainers.image.version="${VERSION}" \
      org.opencontainers.image.revision="${VCS_REF}" \
      org.opencontainers.image.title="ChainMakes Backend" \
      org.opencontainers.image.description="Cryptocurrency Trading Bot Backend API"

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    gcc \
    curl \
    && rm -rf /var/lib/apt/lists/*

# 复制依赖文件
COPY backend/requirements.txt .

# 安装 Python 依赖
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# 创建非 root 用户
RUN groupadd -r appuser && useradd -r -g appuser appuser

# 复制应用代码
COPY backend/ .

# 创建必要的目录
RUN mkdir -p /app/data /app/logs && \
    chown -R appuser:appuser /app

# 切换到非 root 用户
USER appuser

# 暴露端口
EXPOSE 8000

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# 启动命令 (生产环境使用 gunicorn)
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]
